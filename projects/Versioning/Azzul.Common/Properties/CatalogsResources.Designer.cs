//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DustInTheWind.Azzul.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class CatalogsResources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal CatalogsResources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("DustInTheWind.Azzul.Properties.CatalogsResources", typeof(CatalogsResources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Catalog &quot;{0}&quot; was closed..
        /// </summary>
        internal static string CatalogCloser_StatusText_CatalogClosed {
            get {
                return ResourceManager.GetString("CatalogCloser_StatusText_CatalogClosed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Catalog &quot;{0}&quot; was opened..
        /// </summary>
        internal static string CatalogOpener_StatusText_CatalogOpened {
            get {
                return ResourceManager.GetString("CatalogOpener_StatusText_CatalogOpened", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error opening catalog..
        /// </summary>
        internal static string CatalogOpener_StatusText_UnknownErrorOpeningCatalog {
            get {
                return ResourceManager.GetString("CatalogOpener_StatusText_UnknownErrorOpeningCatalog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Internal error: The location provider returned no location..
        /// </summary>
        internal static string CatalogSaver_InternalError_NoLocationFromProvider {
            get {
                return ResourceManager.GetString("CatalogSaver_InternalError_NoLocationFromProvider", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Save the catalog &quot;{0}&quot; before closing?.
        /// </summary>
        internal static string CatalogSaver_Question_SaveBeforeClosing {
            get {
                return ResourceManager.GetString("CatalogSaver_Question_SaveBeforeClosing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Catalog &quot;{0}&quot; was saved..
        /// </summary>
        internal static string CatalogSaver_StatusText_CatalogWasSaved {
            get {
                return ResourceManager.GetString("CatalogSaver_StatusText_CatalogWasSaved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error saving catalog..
        /// </summary>
        internal static string CatalogSaver_StatusText_UnknownErrorSavingCatalog {
            get {
                return ResourceManager.GetString("CatalogSaver_StatusText_UnknownErrorSavingCatalog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Disk &quot;{0}&quot; was deleted from catalog &quot;{1}&quot;..
        /// </summary>
        internal static string DisksManager_StatusText_DiskDeleted {
            get {
                return ResourceManager.GetString("DisksManager_StatusText_DiskDeleted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Catalog &quot;{0}&quot; is already opened. Location: &quot;{1}&quot;..
        /// </summary>
        internal static string Error_CatalogAlreadyOpened {
            get {
                return ResourceManager.GetString("Error_CatalogAlreadyOpened", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Catalog could not be opened from location: &quot;{0}&quot;..
        /// </summary>
        internal static string Error_CatalogNotOpened {
            get {
                return ResourceManager.GetString("Error_CatalogNotOpened", resourceCulture);
            }
        }
    }
}
